name: "main"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  COMPOSE_HTTP_TIMEOUT: 600

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install CI packages
        run: pip install -r ci/requirements.txt
      - name: Lint all files
        run: pre-commit run --all-files
  test-coverage:
    # The type of runner that the job will run on
    permissions:
      actions: write
      contents: read
      pull-requests: write
      checks: write
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: test-coverage
        run: |
          pip install pytest pytest-cov
          pytest --cov
      - name: upload-artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ github.sha }}
          path: coverage.xml
      - name: Checkout
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base_ref
      - name: download-base-ref-coverage
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          set -x
          ARCHIVE_DOWNLOAD_URL=$(curl \
            -f \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            ${{ github.api_url }}/repos/${{ github.repository }}/actions/artifacts\?name\=coverage-${{ github.event.pull_request.base.sha }} | jq -r '.artifacts[0].archive_download_url')
          echo "${ARCHIVE_DOWNLOAD_URL}"
          # Follow the location and redirect
          curl -L \
            -f \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${ARCHIVE_DOWNLOAD_URL}" \
            --output coverage.zip && \
          unzip coverage.zip -d base_ref && \
          rm coverage.zip
      - name: make-coverage-diff-markdown-against-base-ref
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          pip install pycobertura
          # Coverage + Source code to coverage diff markdown
          pycobertura diff \
            --source1 base_ref/ \
            --source2 . \
            base_ref/coverage.xml \
            coverage.xml \
            --format=markdown \
            -o coveragediff.md || true
          cat coveragediff.md
      - name: comment-diff-on-pr
        if: ${{ github.event_name == 'pull_request' }}
        uses: mshick/add-pr-comment@a65df5f64fc741e91c59b8359a4bc56e57aaf5b1 # v2
        with:
          message-path: coveragediff.md
          message-id: coverage-diff
      - name: coverage-report
        uses: 5monkeys/cobertura-action@master
        if: ${{ github.event_name != 'workflow_dispatch' }}
        with:
          path: coverage.xml
          minimum_coverage: 70
          report_name: coverage
          fail_below_threshold: true
